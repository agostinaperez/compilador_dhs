# Generated from /home/agos/dhs/src/main/python/compiladores.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,233,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,1,0,1,0,1,1,1,1,1,2,4,2,89,8,2,11,2,12,2,90,1,
        2,4,2,94,8,2,11,2,12,2,95,1,2,1,2,4,2,100,8,2,11,2,12,2,101,3,2,
        104,8,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,
        1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,
        1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
        1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,
        1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,
        1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
        1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,
        1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,
        1,36,1,37,1,37,1,38,1,38,1,39,1,39,3,39,222,8,39,1,39,1,39,1,39,
        5,39,227,8,39,10,39,12,39,230,9,39,1,40,1,40,0,0,41,1,0,3,0,5,1,
        7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,
        14,33,15,35,16,37,17,39,18,41,19,43,20,45,21,47,22,49,23,51,24,53,
        25,55,26,57,27,59,28,61,29,63,30,65,31,67,32,69,33,71,34,73,35,75,
        36,77,37,79,38,81,39,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,
        13,32,32,238,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
        33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
        43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,
        53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
        63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,
        73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,
        83,1,0,0,0,3,85,1,0,0,0,5,103,1,0,0,0,7,105,1,0,0,0,9,109,1,0,0,
        0,11,115,1,0,0,0,13,120,1,0,0,0,15,127,1,0,0,0,17,132,1,0,0,0,19,
        135,1,0,0,0,21,140,1,0,0,0,23,144,1,0,0,0,25,150,1,0,0,0,27,157,
        1,0,0,0,29,161,1,0,0,0,31,163,1,0,0,0,33,166,1,0,0,0,35,169,1,0,
        0,0,37,171,1,0,0,0,39,173,1,0,0,0,41,176,1,0,0,0,43,179,1,0,0,0,
        45,181,1,0,0,0,47,183,1,0,0,0,49,185,1,0,0,0,51,187,1,0,0,0,53,189,
        1,0,0,0,55,192,1,0,0,0,57,195,1,0,0,0,59,197,1,0,0,0,61,199,1,0,
        0,0,63,201,1,0,0,0,65,203,1,0,0,0,67,205,1,0,0,0,69,207,1,0,0,0,
        71,209,1,0,0,0,73,212,1,0,0,0,75,215,1,0,0,0,77,217,1,0,0,0,79,221,
        1,0,0,0,81,231,1,0,0,0,83,84,7,0,0,0,84,2,1,0,0,0,85,86,7,1,0,0,
        86,4,1,0,0,0,87,89,3,3,1,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,0,
        0,0,90,91,1,0,0,0,91,104,1,0,0,0,92,94,3,3,1,0,93,92,1,0,0,0,94,
        95,1,0,0,0,95,93,1,0,0,0,95,96,1,0,0,0,96,97,1,0,0,0,97,99,5,46,
        0,0,98,100,3,3,1,0,99,98,1,0,0,0,100,101,1,0,0,0,101,99,1,0,0,0,
        101,102,1,0,0,0,102,104,1,0,0,0,103,88,1,0,0,0,103,93,1,0,0,0,104,
        6,1,0,0,0,105,106,5,105,0,0,106,107,5,110,0,0,107,108,5,116,0,0,
        108,8,1,0,0,0,109,110,5,102,0,0,110,111,5,108,0,0,111,112,5,111,
        0,0,112,113,5,97,0,0,113,114,5,116,0,0,114,10,1,0,0,0,115,116,5,
        99,0,0,116,117,5,104,0,0,117,118,5,97,0,0,118,119,5,114,0,0,119,
        12,1,0,0,0,120,121,5,115,0,0,121,122,5,116,0,0,122,123,5,114,0,0,
        123,124,5,105,0,0,124,125,5,110,0,0,125,126,5,103,0,0,126,14,1,0,
        0,0,127,128,5,118,0,0,128,129,5,111,0,0,129,130,5,105,0,0,130,131,
        5,100,0,0,131,16,1,0,0,0,132,133,5,105,0,0,133,134,5,102,0,0,134,
        18,1,0,0,0,135,136,5,101,0,0,136,137,5,108,0,0,137,138,5,115,0,0,
        138,139,5,101,0,0,139,20,1,0,0,0,140,141,5,102,0,0,141,142,5,111,
        0,0,142,143,5,114,0,0,143,22,1,0,0,0,144,145,5,119,0,0,145,146,5,
        104,0,0,146,147,5,105,0,0,147,148,5,108,0,0,148,149,5,101,0,0,149,
        24,1,0,0,0,150,151,5,114,0,0,151,152,5,101,0,0,152,153,5,116,0,0,
        153,154,5,117,0,0,154,155,5,114,0,0,155,156,5,110,0,0,156,26,1,0,
        0,0,157,158,7,2,0,0,158,159,1,0,0,0,159,160,6,13,0,0,160,28,1,0,
        0,0,161,162,5,61,0,0,162,30,1,0,0,0,163,164,5,61,0,0,164,165,5,61,
        0,0,165,32,1,0,0,0,166,167,5,33,0,0,167,168,5,61,0,0,168,34,1,0,
        0,0,169,170,5,60,0,0,170,36,1,0,0,0,171,172,5,62,0,0,172,38,1,0,
        0,0,173,174,5,60,0,0,174,175,5,61,0,0,175,40,1,0,0,0,176,177,5,62,
        0,0,177,178,5,61,0,0,178,42,1,0,0,0,179,180,5,43,0,0,180,44,1,0,
        0,0,181,182,5,45,0,0,182,46,1,0,0,0,183,184,5,42,0,0,184,48,1,0,
        0,0,185,186,5,47,0,0,186,50,1,0,0,0,187,188,5,37,0,0,188,52,1,0,
        0,0,189,190,5,38,0,0,190,191,5,38,0,0,191,54,1,0,0,0,192,193,5,124,
        0,0,193,194,5,124,0,0,194,56,1,0,0,0,195,196,5,33,0,0,196,58,1,0,
        0,0,197,198,5,40,0,0,198,60,1,0,0,0,199,200,5,41,0,0,200,62,1,0,
        0,0,201,202,5,123,0,0,202,64,1,0,0,0,203,204,5,125,0,0,204,66,1,
        0,0,0,205,206,5,59,0,0,206,68,1,0,0,0,207,208,5,44,0,0,208,70,1,
        0,0,0,209,210,5,60,0,0,210,211,5,60,0,0,211,72,1,0,0,0,212,213,5,
        62,0,0,213,214,5,62,0,0,214,74,1,0,0,0,215,216,5,63,0,0,216,76,1,
        0,0,0,217,218,5,58,0,0,218,78,1,0,0,0,219,222,3,1,0,0,220,222,5,
        95,0,0,221,219,1,0,0,0,221,220,1,0,0,0,222,228,1,0,0,0,223,227,3,
        1,0,0,224,227,3,3,1,0,225,227,5,95,0,0,226,223,1,0,0,0,226,224,1,
        0,0,0,226,225,1,0,0,0,227,230,1,0,0,0,228,226,1,0,0,0,228,229,1,
        0,0,0,229,80,1,0,0,0,230,228,1,0,0,0,231,232,9,0,0,0,232,82,1,0,
        0,0,8,0,90,95,101,103,221,226,228,1,6,0,0
    ]

class compiladoresLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUMERO = 1
    INT = 2
    FLOAT = 3
    CHAR = 4
    STRING = 5
    VOID = 6
    IF = 7
    ELSE = 8
    FOR = 9
    WHILE = 10
    RETURN = 11
    WS = 12
    EQ = 13
    EQQ = 14
    NE = 15
    LT = 16
    GT = 17
    LE = 18
    GE = 19
    MAS = 20
    MENOS = 21
    MULT = 22
    DIV = 23
    MOD = 24
    AND = 25
    ORR = 26
    NOT = 27
    PA = 28
    PC = 29
    LLA = 30
    LLC = 31
    PYC = 32
    COMA = 33
    SHL = 34
    SHR = 35
    TERNARIO = 36
    DOS_PUNTOS = 37
    ID = 38
    OTRO = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'float'", "'char'", "'string'", "'void'", "'if'", 
            "'else'", "'for'", "'while'", "'return'", "'='", "'=='", "'!='", 
            "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'&&'", "'||'", "'!'", "'('", "')'", "'{'", "'}'", "';'", "','", 
            "'<<'", "'>>'", "'?'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "NUMERO", "INT", "FLOAT", "CHAR", "STRING", "VOID", "IF", "ELSE", 
            "FOR", "WHILE", "RETURN", "WS", "EQ", "EQQ", "NE", "LT", "GT", 
            "LE", "GE", "MAS", "MENOS", "MULT", "DIV", "MOD", "AND", "ORR", 
            "NOT", "PA", "PC", "LLA", "LLC", "PYC", "COMA", "SHL", "SHR", 
            "TERNARIO", "DOS_PUNTOS", "ID", "OTRO" ]

    ruleNames = [ "LETRA", "DIGITO", "NUMERO", "INT", "FLOAT", "CHAR", "STRING", 
                  "VOID", "IF", "ELSE", "FOR", "WHILE", "RETURN", "WS", 
                  "EQ", "EQQ", "NE", "LT", "GT", "LE", "GE", "MAS", "MENOS", 
                  "MULT", "DIV", "MOD", "AND", "ORR", "NOT", "PA", "PC", 
                  "LLA", "LLC", "PYC", "COMA", "SHL", "SHR", "TERNARIO", 
                  "DOS_PUNTOS", "ID", "OTRO" ]

    grammarFileName = "compiladores.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


